{
    "swagger": "2.0",
    "info": {
        "version": "0.0.1-SNAPSHOT",
        "title": "Управление учетными записями товароучетной системы (ТУ)",
        "description": "Описание запросов Эвотор [сервер] к API товароучетной системы [сервер]. Эти запросы управляют учетными записями партнера (проверка наличия, создание, установка или деактивация того или иного тарифа). <br> <br> Жизненый цикл подписки юзера в биллинге Эвотор: <br> <br> <b>создание подписки</b> (начало триала если она есть) -> <b>оплата</b> (после триала, или сразу если его нет) -> <b>активация подписки</b> (первый billing day)"
    },
    "paths": {
        "/api/v1/user/verify": {
            "post": {
                "summary": "Верификация пользователя ТУ",
                "description": "Выполняет следующие задачи  1) проверка существует ли пользователь в системе партнера  2) проверка билится ли пользователь в системе партнера 3) если в системе партнера испозуется авторизация через token, то его нужно вернуть как параметр в ответе. >\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authEvotor"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "параметры необходимые для получения данных о пользователе",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "данные пользователя",
                            "type": "object",
                            "required": [
                                "userId",
                                "hasBilling"
                            ],
                            "properties": {
                                "userId": {
                                    "type": "string",
                                    "description": "id пользователя в системе партнера"
                                },
                                "hasBilling": {
                                    "type": "boolean"
                                },
                                "token": {
                                    "description": "опциональный параметр, возвращется если партнер использует авторизацию через token в запросах товароучетного API",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "пользователь не найден"
                    }
                }
            }
        },
        "/api/v1/user/create": {
            "post": {
                "summary": "Создание пользователя",
                "description": "Создание пользователя в системе партнера",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authEvotor"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "параметры необходимые для создания пользователя в партнере",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "данные пользователя",
                            "type": "object",
                            "required": [
                                "userId"
                            ],
                            "properties": {
                                "userId": {
                                    "type": "string"
                                },
                                "error": {
                                    "type": "string"
                                },
                                "token": {
                                    "description": "опциональный параметр, возвращется если партнер использует авторизацию через token в запросах товароучетного API",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/tariff": {
            "post": {
                "summary": "Активация / деактивация тарифа ",
                "description": "Установка / деактивация тарифа учетки не только для новых пользователей, но и для ранее созданных учеток НЕ от нашего лица (типа юзер сам заходил ранее и создал)",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authEvotor"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "параметры необходимые для установки тарифа пользователю в партнере",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "userId"
                            ],
                            "properties": {
                                "userId": {
                                    "type": "string"
                                },
                                "tariffId": {
                                    "type": "number"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "ACTIVE",
                                        "INACTIVE"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/events/billing": {
            "post": {
                "summary": "Event: начало триала подписки",
                "description": "ВАЖНО: хост у EVENTS всегда один и тотже, из-за невозможности в Open API отобразить несколько запросов к одному URL, сделан лайфхак - добавление нижнего подчеркивания",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authEvotor"
                    },
                    {
                        "name": "subscriptionCreated",
                        "description": "Event: начало триала подписки",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscriptionCreated"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            }
        },
        "/api/v1/events/billing_": {
            "post": {
                "summary": "Event: успешная оплата",
                "description": "ВАЖНО: хост у EVENTS всегда один и тотже, из-за невозможности в Open API отобразить несколько запросов к одному URL, сделан лайфхак - добавление нижнего подчеркивания",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authEvotor"
                    },
                    {
                        "name": "paymentSuccessed",
                        "description": "Event: успешная оплата",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/paymentSuccessed"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            }
        },
        "/api/v1/events/billing__": {
            "post": {
                "summary": "Event: подписка активирована",
                "description": "ВАЖНО: хост у EVENTS всегда один и тотже, из-за невозможности в Open API отобразить несколько запросов к одному URL, сделан лайфхак - добавление нижнего подчеркивания",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authEvotor"
                    },
                    {
                        "name": "subscriptionActivated",
                        "description": "Event: подписка активирована",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscriptionActivated"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            }
        },
        "/api/v1/events/billing___": {
            "post": {
                "summary": "Event: оплата не прошла",
                "description": "ВАЖНО: хост у EVENTS всегда один и тотже, из-за невозможности в Open API отобразить несколько запросов к одному URL, сделан лайфхак - добавление нижнего подчеркивания",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/authEvotor"
                    },
                    {
                        "name": "paymentFailed",
                        "description": "Event: оплата не прошла",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/paymentFailed"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            }
        }
    },
    "parameters": {
        "authEvotor": {
            "name": "basic auth / api key",
            "in": "header",
            "description": "авторизация Эвотор в системе партнера",
            "required": true,
            "type": "string"
        }
    },
    "definitions": {
        "user": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string",
                    "description": "id пользователя в системе эвтор"
                },
                "userName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "CUSTOM_FIELD_NAME_1": {
                    "type": "string",
                    "description": "набор полей (например, номер телефона / email) выбирает партнер, которые необходимы для проверки наличия пользователя в системе и проверки платит ли этот пользователь"
                },
                "CUSTOM_FIELD_NAME_2": {
                    "type": "string"
                }
            }
        },
        "subscriptionCreated": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "trialDurationDays": {
                            "type": "number"
                        },
                        "user": {
                            "$ref": "#/definitions/user"
                        }
                    }
                }
            }
        },
        "paymentSuccessed": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number"
                        },
                        "user": {
                            "$ref": "#/definitions/user"
                        }
                    }
                }
            }
        },
        "subscriptionActivated": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "$ref": "#/definitions/user"
                        }
                    }
                }
            }
        },
        "paymentFailed": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number"
                        },
                        "nextPaymentAtemptInDays": {
                            "type": "number",
                            "description": "через сколько дней будет следующая попытка списать деньги"
                        },
                        "error": {
                            "type": "string",
                            "description": "описание ошибки"
                        },
                        "user": {
                            "$ref": "#/definitions/user"
                        }
                    }
                }
            }
        }
    }
}
